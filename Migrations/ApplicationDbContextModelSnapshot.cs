// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OC_P5.Data;

#nullable disable

namespace OC_P5.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OC_P5.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<int?>("CarTrimId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfProductionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("CarTrimId");

                    b.HasIndex("YearOfProductionId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarBrandId = 1,
                            CarModelId = 4,
                            Description = "Car description 1",
                            Label = "Car 1",
                            Status = 1,
                            VIN = "1HGCM82633A123456",
                            YearOfProductionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarBrandId = 2,
                            CarModelId = 7,
                            CarTrimId = 1,
                            Description = "Car description 2",
                            Label = "Car 2",
                            Status = 0,
                            VIN = "1HGCM82633A654321",
                            YearOfProductionId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarBrandId = 3,
                            CarModelId = 28,
                            CarTrimId = 2,
                            Description = "Car description 3",
                            Label = "Car 3",
                            Status = 0,
                            VIN = "1HGCM82633A789456",
                            YearOfProductionId = 3
                        },
                        new
                        {
                            Id = 4,
                            CarBrandId = 4,
                            CarModelId = 11,
                            CarTrimId = 3,
                            Description = "Car description 4",
                            Label = "Car 4",
                            Status = 1,
                            VIN = "1HGCM82633A987654",
                            YearOfProductionId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarBrandId = 5,
                            CarModelId = 14,
                            CarTrimId = 4,
                            Description = "Car description 5",
                            Label = "Car 5",
                            Status = 2,
                            VIN = "1HGCM82633A456789",
                            YearOfProductionId = 5
                        },
                        new
                        {
                            Id = 6,
                            CarBrandId = 6,
                            CarModelId = 16,
                            CarTrimId = 5,
                            Description = "Car description 6",
                            Label = "Car 6",
                            Status = 1,
                            VIN = "1HGCM82633A321654",
                            YearOfProductionId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarBrandId = 7,
                            CarModelId = 1,
                            CarTrimId = 6,
                            Description = "Car description 7",
                            Label = "Car 7",
                            Status = 1,
                            VIN = "1HGCM82633A159753",
                            YearOfProductionId = 7
                        },
                        new
                        {
                            Id = 8,
                            CarBrandId = 8,
                            CarModelId = 21,
                            CarTrimId = 7,
                            Description = "Car description 8",
                            Label = "Car 8",
                            Status = 2,
                            VIN = "1HGCM82633A357951",
                            YearOfProductionId = 8
                        },
                        new
                        {
                            Id = 9,
                            CarBrandId = 9,
                            CarModelId = 22,
                            CarTrimId = 8,
                            Description = "Car description 9",
                            Label = "Car 9",
                            Status = 0,
                            VIN = "1HGCM82633A753159",
                            YearOfProductionId = 9
                        },
                        new
                        {
                            Id = 10,
                            CarBrandId = 10,
                            CarModelId = 26,
                            CarTrimId = 9,
                            Description = "Car description 10",
                            Label = "Car 10",
                            Status = 1,
                            VIN = "1HGCM82633A852963",
                            YearOfProductionId = 10
                        });
                });

            modelBuilder.Entity("OC_P5.Models.CarBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Audi"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "BMW"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Citroën"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Fiat"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Ford"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Mercedes"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Peugeot"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Renault"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Toyota"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Volkswagen"
                        });
                });

            modelBuilder.Entity("OC_P5.Models.CarMedia", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("CarMedias");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            MediaId = 1
                        },
                        new
                        {
                            CarId = 2,
                            MediaId = 2
                        },
                        new
                        {
                            CarId = 3,
                            MediaId = 3
                        },
                        new
                        {
                            CarId = 4,
                            MediaId = 4
                        },
                        new
                        {
                            CarId = 5,
                            MediaId = 5
                        },
                        new
                        {
                            CarId = 6,
                            MediaId = 6
                        },
                        new
                        {
                            CarId = 7,
                            MediaId = 7
                        },
                        new
                        {
                            CarId = 8,
                            MediaId = 8
                        },
                        new
                        {
                            CarId = 9,
                            MediaId = 9
                        },
                        new
                        {
                            CarId = 10,
                            MediaId = 10
                        });
                });

            modelBuilder.Entity("OC_P5.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId");

                    b.ToTable("CarModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarBrandId = 7,
                            Model = "107"
                        },
                        new
                        {
                            Id = 2,
                            CarBrandId = 7,
                            Model = "208"
                        },
                        new
                        {
                            Id = 3,
                            CarBrandId = 7,
                            Model = "3008"
                        },
                        new
                        {
                            Id = 4,
                            CarBrandId = 1,
                            Model = "A3"
                        },
                        new
                        {
                            Id = 5,
                            CarBrandId = 1,
                            Model = "A4"
                        },
                        new
                        {
                            Id = 6,
                            CarBrandId = 1,
                            Model = "Q5"
                        },
                        new
                        {
                            Id = 7,
                            CarBrandId = 2,
                            Model = "X1"
                        },
                        new
                        {
                            Id = 8,
                            CarBrandId = 2,
                            Model = "X3"
                        },
                        new
                        {
                            Id = 9,
                            CarBrandId = 2,
                            Model = "M3"
                        },
                        new
                        {
                            Id = 10,
                            CarBrandId = 4,
                            Model = "500"
                        },
                        new
                        {
                            Id = 11,
                            CarBrandId = 4,
                            Model = "Panda"
                        },
                        new
                        {
                            Id = 12,
                            CarBrandId = 4,
                            Model = "Tipo"
                        },
                        new
                        {
                            Id = 13,
                            CarBrandId = 5,
                            Model = "Fiesta"
                        },
                        new
                        {
                            Id = 14,
                            CarBrandId = 5,
                            Model = "Focus"
                        },
                        new
                        {
                            Id = 15,
                            CarBrandId = 5,
                            Model = "Mustang"
                        },
                        new
                        {
                            Id = 16,
                            CarBrandId = 6,
                            Model = "A-Class"
                        },
                        new
                        {
                            Id = 17,
                            CarBrandId = 6,
                            Model = "C-Class"
                        },
                        new
                        {
                            Id = 18,
                            CarBrandId = 6,
                            Model = "E-Class"
                        },
                        new
                        {
                            Id = 19,
                            CarBrandId = 8,
                            Model = "Clio"
                        },
                        new
                        {
                            Id = 20,
                            CarBrandId = 8,
                            Model = "Captur"
                        },
                        new
                        {
                            Id = 21,
                            CarBrandId = 8,
                            Model = "Twingo"
                        },
                        new
                        {
                            Id = 22,
                            CarBrandId = 9,
                            Model = "Corolla"
                        },
                        new
                        {
                            Id = 23,
                            CarBrandId = 9,
                            Model = "Camry"
                        },
                        new
                        {
                            Id = 24,
                            CarBrandId = 9,
                            Model = "RAV4"
                        },
                        new
                        {
                            Id = 25,
                            CarBrandId = 10,
                            Model = "Golf"
                        },
                        new
                        {
                            Id = 26,
                            CarBrandId = 10,
                            Model = "Passat"
                        },
                        new
                        {
                            Id = 27,
                            CarBrandId = 10,
                            Model = "Tiguan"
                        },
                        new
                        {
                            Id = 28,
                            CarBrandId = 3,
                            Model = "C3"
                        },
                        new
                        {
                            Id = 29,
                            CarBrandId = 3,
                            Model = "C4"
                        },
                        new
                        {
                            Id = 30,
                            CarBrandId = 3,
                            Model = "C5"
                        });
                });

            modelBuilder.Entity("OC_P5.Models.CarModelCarTrim", b =>
                {
                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<int>("CarTrimId")
                        .HasColumnType("int");

                    b.HasKey("CarModelId", "CarTrimId");

                    b.HasIndex("CarTrimId");

                    b.ToTable("CarModelCarTrims");

                    b.HasData(
                        new
                        {
                            CarModelId = 1,
                            CarTrimId = 1
                        },
                        new
                        {
                            CarModelId = 1,
                            CarTrimId = 2
                        },
                        new
                        {
                            CarModelId = 2,
                            CarTrimId = 1
                        },
                        new
                        {
                            CarModelId = 2,
                            CarTrimId = 3
                        },
                        new
                        {
                            CarModelId = 3,
                            CarTrimId = 2
                        },
                        new
                        {
                            CarModelId = 3,
                            CarTrimId = 4
                        },
                        new
                        {
                            CarModelId = 4,
                            CarTrimId = 3
                        },
                        new
                        {
                            CarModelId = 4,
                            CarTrimId = 5
                        },
                        new
                        {
                            CarModelId = 5,
                            CarTrimId = 4
                        },
                        new
                        {
                            CarModelId = 5,
                            CarTrimId = 1
                        });
                });

            modelBuilder.Entity("OC_P5.Models.CarTrim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TrimLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarTrims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TrimLabel = "Base"
                        },
                        new
                        {
                            Id = 2,
                            TrimLabel = "Sport"
                        },
                        new
                        {
                            Id = 3,
                            TrimLabel = "Luxury"
                        },
                        new
                        {
                            Id = 4,
                            TrimLabel = "Premium"
                        },
                        new
                        {
                            Id = 5,
                            TrimLabel = "Exclusive"
                        },
                        new
                        {
                            Id = 6,
                            TrimLabel = "GT"
                        },
                        new
                        {
                            Id = 7,
                            TrimLabel = "SE"
                        },
                        new
                        {
                            Id = 8,
                            TrimLabel = "SEL"
                        },
                        new
                        {
                            Id = 9,
                            TrimLabel = "X-Line"
                        },
                        new
                        {
                            Id = 10,
                            TrimLabel = "R-Line"
                        },
                        new
                        {
                            Id = 11,
                            TrimLabel = "Z-Edition"
                        },
                        new
                        {
                            Id = 12,
                            TrimLabel = "Black Edition"
                        },
                        new
                        {
                            Id = 13,
                            TrimLabel = "White Edition"
                        },
                        new
                        {
                            Id = 14,
                            TrimLabel = "S-Line"
                        },
                        new
                        {
                            Id = 15,
                            TrimLabel = "Avant"
                        },
                        new
                        {
                            Id = 16,
                            TrimLabel = "Highline"
                        },
                        new
                        {
                            Id = 17,
                            TrimLabel = "Limited"
                        },
                        new
                        {
                            Id = 18,
                            TrimLabel = "Ultimate"
                        },
                        new
                        {
                            Id = 19,
                            TrimLabel = "Sportback"
                        },
                        new
                        {
                            Id = 20,
                            TrimLabel = "Touring"
                        });
                });

            modelBuilder.Entity("OC_P5.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfMediaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfMediaId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Car 1 Image",
                            Path = "/medias/pictures/Car (1).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Label = "Car 2 Image",
                            Path = "/medias/pictures/Car (2).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Label = "Car 3 Image",
                            Path = "/medias/pictures/Car (3).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Label = "Car 4 Image",
                            Path = "/medias/pictures/Car (4).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Label = "Car 5 Image",
                            Path = "/medias/pictures/Car (5).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 6,
                            Label = "Car 6 Image",
                            Path = "/medias/pictures/Car (6).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 7,
                            Label = "Car 7 Image",
                            Path = "/medias/pictures/Car (7).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 8,
                            Label = "Car 8 Image",
                            Path = "/medias/pictures/Car (8).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 9,
                            Label = "Car 9 Image",
                            Path = "/medias/pictures/Car (9).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 10,
                            Label = "Car 10 Image",
                            Path = "/medias/pictures/Car (10).jpg",
                            TypeOfMediaId = 1
                        });
                });

            modelBuilder.Entity("OC_P5.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            PurchaseDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 15000.00m
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            PurchaseDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 18000.00m
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            PurchaseDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 20000.00m
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            PurchaseDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 17000.00m
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            PurchaseDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 16000.00m
                        },
                        new
                        {
                            Id = 6,
                            CarId = 6,
                            PurchaseDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 19000.00m
                        },
                        new
                        {
                            Id = 7,
                            CarId = 7,
                            PurchaseDate = new DateTime(2023, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 22000.00m
                        },
                        new
                        {
                            Id = 8,
                            CarId = 8,
                            PurchaseDate = new DateTime(2023, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 21000.00m
                        },
                        new
                        {
                            Id = 9,
                            CarId = 9,
                            PurchaseDate = new DateTime(2023, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 23000.00m
                        },
                        new
                        {
                            Id = 10,
                            CarId = 10,
                            PurchaseDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 25000.00m
                        });
                });

            modelBuilder.Entity("OC_P5.Models.Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RepairCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RepairDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Repairs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            Description = "Repair description 1",
                            RepairCost = 500.00m,
                            RepairDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CarId = 3,
                            Description = "Repair description 2",
                            RepairCost = 700.00m,
                            RepairDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CarId = 4,
                            Description = "Repair description 3",
                            RepairCost = 600.00m,
                            RepairDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CarId = 5,
                            Description = "Repair description 4",
                            RepairCost = 800.00m,
                            RepairDate = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CarId = 6,
                            Description = "Repair description 5",
                            RepairCost = 900.00m,
                            RepairDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CarId = 7,
                            Description = "Repair description 6",
                            RepairCost = 1000.00m,
                            RepairDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CarId = 8,
                            Description = "Repair description 7",
                            RepairCost = 1100.00m,
                            RepairDate = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CarId = 10,
                            Description = "Repair description 8",
                            RepairCost = 1200.00m,
                            RepairDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OC_P5.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 5,
                            SaleDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 20000.00m
                        },
                        new
                        {
                            Id = 2,
                            CarId = 8,
                            SaleDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 23000.00m
                        });
                });

            modelBuilder.Entity("OC_P5.Models.TypeOfMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfMedias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Image"
                        },
                        new
                        {
                            Id = 2,
                            Type = "PDF"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Doc"
                        });
                });

            modelBuilder.Entity("OC_P5.Models.YearOfProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("YearOfProductions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            Year = 2019
                        },
                        new
                        {
                            Id = 3,
                            Year = 2018
                        },
                        new
                        {
                            Id = 4,
                            Year = 2017
                        },
                        new
                        {
                            Id = 5,
                            Year = 2016
                        },
                        new
                        {
                            Id = 6,
                            Year = 2015
                        },
                        new
                        {
                            Id = 7,
                            Year = 2014
                        },
                        new
                        {
                            Id = 8,
                            Year = 2013
                        },
                        new
                        {
                            Id = 9,
                            Year = 2012
                        },
                        new
                        {
                            Id = 10,
                            Year = 2011
                        },
                        new
                        {
                            Id = 11,
                            Year = 2010
                        },
                        new
                        {
                            Id = 12,
                            Year = 2009
                        },
                        new
                        {
                            Id = 13,
                            Year = 2008
                        },
                        new
                        {
                            Id = 14,
                            Year = 2007
                        },
                        new
                        {
                            Id = 15,
                            Year = 2006
                        },
                        new
                        {
                            Id = 16,
                            Year = 2005
                        },
                        new
                        {
                            Id = 17,
                            Year = 2004
                        },
                        new
                        {
                            Id = 18,
                            Year = 2003
                        },
                        new
                        {
                            Id = 19,
                            Year = 2002
                        },
                        new
                        {
                            Id = 20,
                            Year = 2001
                        },
                        new
                        {
                            Id = 21,
                            Year = 2000
                        },
                        new
                        {
                            Id = 22,
                            Year = 1999
                        },
                        new
                        {
                            Id = 23,
                            Year = 1998
                        },
                        new
                        {
                            Id = 24,
                            Year = 1997
                        },
                        new
                        {
                            Id = 25,
                            Year = 1996
                        },
                        new
                        {
                            Id = 26,
                            Year = 1995
                        },
                        new
                        {
                            Id = 27,
                            Year = 1994
                        },
                        new
                        {
                            Id = 28,
                            Year = 1993
                        },
                        new
                        {
                            Id = 29,
                            Year = 1992
                        },
                        new
                        {
                            Id = 30,
                            Year = 1991
                        },
                        new
                        {
                            Id = 31,
                            Year = 1990
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.AdminUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.AdminUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.AdminUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.AdminUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.AdminUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OC_P5.Models.Car", b =>
                {
                    b.HasOne("OC_P5.Models.CarBrand", "CarBrand")
                        .WithMany("Cars")
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OC_P5.Models.CarModel", "CarModel")
                        .WithMany("Cars")
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OC_P5.Models.CarTrim", "CarTrim")
                        .WithMany()
                        .HasForeignKey("CarTrimId");

                    b.HasOne("OC_P5.Models.YearOfProduction", "YearOfProduction")
                        .WithMany("Cars")
                        .HasForeignKey("YearOfProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBrand");

                    b.Navigation("CarModel");

                    b.Navigation("CarTrim");

                    b.Navigation("YearOfProduction");
                });

            modelBuilder.Entity("OC_P5.Models.CarMedia", b =>
                {
                    b.HasOne("OC_P5.Models.Car", "Car")
                        .WithMany("CarMedia")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OC_P5.Models.Media", "Media")
                        .WithMany("CarMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("OC_P5.Models.CarModel", b =>
                {
                    b.HasOne("OC_P5.Models.CarBrand", "CarBrand")
                        .WithMany("CarModels")
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBrand");
                });

            modelBuilder.Entity("OC_P5.Models.CarModelCarTrim", b =>
                {
                    b.HasOne("OC_P5.Models.CarModel", "CarModel")
                        .WithMany("CarModelCarTrims")
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OC_P5.Models.CarTrim", "CarTrim")
                        .WithMany("CarModelCarTrims")
                        .HasForeignKey("CarTrimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarModel");

                    b.Navigation("CarTrim");
                });

            modelBuilder.Entity("OC_P5.Models.Media", b =>
                {
                    b.HasOne("OC_P5.Models.TypeOfMedia", "TypeOfMedia")
                        .WithMany()
                        .HasForeignKey("TypeOfMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfMedia");
                });

            modelBuilder.Entity("OC_P5.Models.Purchase", b =>
                {
                    b.HasOne("OC_P5.Models.Car", "Car")
                        .WithMany("Purchases")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("OC_P5.Models.Repair", b =>
                {
                    b.HasOne("OC_P5.Models.Car", "Car")
                        .WithMany("Repairs")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("OC_P5.Models.Sale", b =>
                {
                    b.HasOne("OC_P5.Models.Car", "Car")
                        .WithMany("Sales")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("OC_P5.Models.Car", b =>
                {
                    b.Navigation("CarMedia");

                    b.Navigation("Purchases");

                    b.Navigation("Repairs");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("OC_P5.Models.CarBrand", b =>
                {
                    b.Navigation("CarModels");

                    b.Navigation("Cars");
                });

            modelBuilder.Entity("OC_P5.Models.CarModel", b =>
                {
                    b.Navigation("CarModelCarTrims");

                    b.Navigation("Cars");
                });

            modelBuilder.Entity("OC_P5.Models.CarTrim", b =>
                {
                    b.Navigation("CarModelCarTrims");
                });

            modelBuilder.Entity("OC_P5.Models.Media", b =>
                {
                    b.Navigation("CarMedias");
                });

            modelBuilder.Entity("OC_P5.Models.YearOfProduction", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
